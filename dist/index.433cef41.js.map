{"mappings":"AAAA,MAAMA,UAAYC,EAAE,aAEdC,QAAUF,UAAUG,KAAK,WACzBC,EAAIC,aAAaC,QAAQ,KAEzBC,QAAUC,KAAKC,MAAML,GAGrBM,QAAUH,SAAW,CAE6C,CAApEI,KAAM,IAAKC,IAAK,oBAClB,CAAED,KAAM,IAAKC,IAAK,wBAClB,CAAED,KAAM,IAAKC,IAAK,0BAGdC,YAAeD,GACZA,EACJE,QAAQ,WAAY,IACpBA,QAAQ,UAAW,IACnBA,QAAQ,OAAQ,IAChBA,QAAO,OAAS,IAIfC,OAAM,KACVf,UAAUG,KAAK,iBAAiBa,SAEYN,QAApCO,SAAO,CAAEC,EAAMC,KACrB,MAAMC,EAAMnB,EAAC,2DAEWiB,EAAKP,yCACLE,YAAYK,EAAKN,oLAOjCS,aAAanB,SACrBkB,EAAIE,GAAG,SAAO,KACZC,OAAOC,KAAKN,EAAKN,QAEnBQ,EAAIE,GAAG,QAAS,UAAWG,IAErBA,EAAFC,kBAEFhB,QAAQiB,OAAOR,EAAO,GACYJ,gBAMlCA,SACNd,EAAE,cAAcqB,GAAG,SAAO,KACxB,IAAIV,EAAMW,OAAOK,OAAO,gBAEI,IAAxBhB,EAAIiB,QAAQ,UACdjB,EAAM,WAAaA,GAErBkB,QAAQC,IAAInB,GAEZF,QAAQsB,KAAK,CACXrB,KAAME,YAAYD,GAAK,GAAGqB,cAC1BC,SAAU,OACVtB,IAAKA,IAICG,YAWVQ,OAAOY,eAAc,KAEP,MAANC,EAAS5B,KAAK6B,UAAU3B,SAK9BL,aAAaiC,QAAQ,IAAKF,IAE5BnC,EAAEsC,UAAUjB,GAAG,YAAaG,IAE1B,MAAMe,IAAEA,GAAQf,EAChBK,QAAQC,IAAIS,GACZ,IAAK,IAAIC,EAAI,EAAGA,EAAI/B,QAAQgC,OAAQD,IAC9B/B,QAAQ+B,GAAG9B,KAAKgC,gBAAkBH,GACpCjB,OAAOC,KAAKd,QAAQ+B,GAAG7B","sources":["src/main.js"],"sourcesContent":["const $siteList = $(\".siteList\");\n//   console.log($siteList);\nconst $lastLi = $siteList.find(\"li.last\"); //找到网站列表里的最后一个li\nconst x = localStorage.getItem(\"x\"); //从localStorage 中读出 x，此时 x 为字符串，需转化为对象\n\nconst xObject = JSON.parse(x); //把字符串重新变成对象\n\n//hashMap的值，若xObject存在即为初始值，若不存在（第一次xObject为空值），即为默认数组\nconst hashMap = xObject || [\n  //声明一个hash变量,parcel默认在代码外面加作用域，不能变成全局变量,就不用管全局污染了\n  { logo: \"A\", url: \"https://acfun.cn\" },\n  { logo: \"B\", url: \"https://bilibili.com\" },\n  { logo: \"M\", url: \"https://music.163.com\" },\n];\n\nconst simplifyUrl = (url) => {\n  return url\n    .replace(\"https://\", \"\")\n    .replace(\"http://\", \"\")\n    .replace(\"www.\", \"\")\n    .replace(/\\/.*/, \"\"); // 使用正则表达式选中 /开头的内容并删除\n};\n\n//渲染hashMap\nconst render = () => {\n  $siteList.find(\"li:not(.last)\").remove(); //找到siteList里除了最后一个li的所有li,删掉\n  //遍历hashMap,forEach给两个参数，一个是当前元素，另一个是下标\n  hashMap.forEach((node, index) => {\n    const $li = $(`<li>\n    <div class=\"site\">\n        <div class=\"logo\">${node.logo}</div>\n        <div class=\"link\">${simplifyUrl(node.url)}</div>\n        <div class=\"close\">\n          <svg class=\"icon\">\n            <use xlink:href=\"#icon-close\"></use>\n          </svg>\n        </div>\n    </div>\n    </li>`).insertBefore($lastLi);\n    $li.on(\"click\", () => {\n      window.open(node.url); //打开一个新窗口，打开的地址为node.url\n    });\n    $li.on(\"click\", \".close\", (e) => {\n      // console.log(\"这里\");\n      e.stopPropagation(); //阻止冒泡\n      // console.log(hashMap);\n      hashMap.splice(index, 1); //splice两个参数分别是删除位置以及删除个数\n      render(); //删除后重新渲染\n    });\n  });\n};\n//注：整体结构就是首先渲染hashMap，click后，push到 siteList 里后再渲染一次\n//先渲染hashMap\nrender();\n$(\".addButton\").on(\"click\", () => {\n  let url = window.prompt(\"请问你要添加的网址是啥？\");\n  s;\n  if (url.indexOf(\"http\") !== 0) {\n    url = \"https://\" + url;\n  }\n  console.log(url);\n\n  hashMap.push({\n    logo: simplifyUrl(url)[0].toUpperCase(),\n    logoType: \"text\",\n    url: url,\n  });\n\n  //再次渲染hashMap\n  render();\n\n  //   const $li = $(`<li>\n  //   <a href=\"${url}\">\n  //     <div class=\"site\">\n  //       <div class=\"logo\">${url[0]}</div>\n  //       <div class=\"link\">${url}</div>\n  //     </div>\n  //   </a>\n  // </li>`).insertBefore($lastLi); //在最后一个lastLi前面插入新的li\n});\nwindow.onbeforeunload = () => {\n  //   console.log(\"页面要关闭了\");\n  const string = JSON.stringify(hashMap); //将对象变成字符串\n  //   console.log(typeof hashMap);\n  //   console.log(hashMap);\n  //   console.log(typeof string);\n  //   console.log(string);\n  localStorage.setItem(\"x\", string); //接收两个参数，一个key，一个value\n};\n$(document).on(\"keypress\", (e) => {\n  //const key = e.key;//若变量名和属性名一样可简写\n  const { key } = e;\n  console.log(key);\n  for (let i = 0; i < hashMap.length; i++) {\n    if (hashMap[i].logo.toLowerCase() === key) {\n      window.open(hashMap[i].url);\n    }\n  }\n});\n"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","logo","url","simplifyUrl","replace","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","indexOf","console","log","push","toUpperCase","logoType","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"version":3,"file":"index.433cef41.js.map"}